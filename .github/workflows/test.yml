name: Mobil CI/CD Workflow

on:
  push:
    branches:
      - main
      - development
      - feature-branches
      - master

  pull_request:
    types: [opened, closed]
    branches:
      - main

  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Expo CLI
        run: npm install --global expo-cli

      - name: Install dependencies
        run: npm install

      - name: Lint code with Expo
        run: expo lint --max-warnings=0

  build:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref_name == 'main' # Ejecutar solo en la rama main
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Install dependencies
        run: npm install

      - name: Build APK for Android
        run: npx eas-cli build --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  # NOTIFICACIONES
  notify_build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Send Slack notification on failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"ðŸš¨ Build failed Job: build en la rama: ${{ github.ref_name }} "}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack notification on success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"âœ… Build succeeded Job: build en la rama: ${{ github.ref_name }} "}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  notify_test:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      # NotificaciÃ³n cuando falla la prueba
      - name: Send Slack notification on failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"ðŸš¨ Build failed Job: build-and-test en la rama: ${{ github.ref_name }} "}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack notification on success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"âœ… Build succeeded Job: build-and-test en la rama: ${{ github.ref_name }} "}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}



  # NotificaciÃ³n del Pull Request
  notify_pr_comment:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add comment on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            github.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "ðŸš€ Â¡El Pull Request ha sido actualizado! Revisa los Ãºltimos cambios."
            });



